name: CI/CD
on: push
env:
  VERSION_EXP: git describe --tags --always --first-parent --dirty
  PKG_NAME: docker.pkg.github.com/mwierzchowski/helios/helios-app

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - name: Debug process (TODO - remove me)
      run: echo "event [$EVENT] action [$ACTION]"
      env:
        EVENT: ${{github.event_name}}
        ACTION: ${{github.event.action}}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Checkout tags
      run: git fetch --prune --unshallow

    - name: Set up JDK 13
      uses: actions/setup-java@v1
      with:
        java-version: 1.13

    - name: Set up Gradle Wrapper
      run: chmod +x gradlew

    - name: Set up dependencies cache
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{runner.os}}-gradle-${{hashFiles('**/*.gradle*')}}
        restore-keys: |
          ${{runner.os}}-gradle-

    - name: Set up version
      run: echo "::set-env name=VERSION::$($VERSION_EXP)"

    - name: Assemble application
      run: ./gradlew assemble -PbuildInfoEnabled

    - name: Assemble image
      run: docker build -t $PKG_NAME:$VERSION -t $PKG_NAME:latest .

    - name: Deploy test environment
      env:
        OWM_API_KEY: ${{secrets.OWM_API_KEY}}
        MAIL_HOST: smtp.gmail.com
        MAIL_USER: ${{secrets.TEST_MAIL_USER}}
        MAIL_PASSWORD: ${{secrets.TEST_MAIL_PASS}}
        MAIL_RECIPIENT: ${{secrets.TEST_MAIL_USER}}@gmail.com
      run: docker-compose up -d

    - name: Test E2E
      run: ./gradlew testE2E

    - name: Publish test E2E summary
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test E2E Summary
        path: ~/work/helios/helios/build/reports/tests/testE2E

    - name: Publish image
      if: github.event_name == 'release' && github.event.action == 'published'
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      run: |
        echo $GITHUB_TOKEN | docker login docker.pkg.github.com --username mwierzchowski --password-stdin
        docker push $PKG_NAME:latest
        docker push $PKG_NAME:$VERSION

  Test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Checkout tags
      run: git fetch --prune --unshallow

    - name: Set up JDK 13
      uses: actions/setup-java@v1
      with:
        java-version: 1.13

    - name: Set up Gradle Wrapper
      run: chmod +x gradlew

    - name: Set up dependencies cache
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{runner.os}}-gradle-${{hashFiles('**/*.gradle*')}}
        restore-keys: |
          ${{runner.os}}-gradle-

    - name: Set up version
      run: echo "::set-env name=VERSION::$($VERSION_EXP)"

    - name: Test application
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      run: ./gradlew test jacocoTestReport sonarqube -Dsonar.branch.name=$GITHUB_REF_NAME

    - name: Publish test summary
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test Summary
        path: ~/work/helios/helios/build/reports/tests/test

  Deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    needs:
      - Build
      - Test
    steps:
      - run: echo "This is just a placeholder for future deployment job"